server {
    listen "8081";

    # 开启dns解析
    resolver local=on ipv6=off;
    resolver_timeout 5s;

    # 获取response body
    lua_need_request_body on;
    set $resp_body "";
    body_filter_by_lua '
        local resp_body = string.sub(ngx.arg[1], 1, 1000)
        ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        if ngx.arg[2] then
            ngx.var.resp_body = ngx.ctx.buffered
        end
    ';

    location /v1/hello {
        add_header Content-Type 'text/html; charset=utf-8';
        return 200 'hello openresty stress';
    }

    location /v1/hello/openresty {
        default_type text/html;
        content_by_lua '
            ngx.say("<p>hello openresty</p>")
        ';
    }

    location /v1/hello/get {
        default_type text/html;
        content_by_lua_file lua/http.lua;
    }
    
    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }
}