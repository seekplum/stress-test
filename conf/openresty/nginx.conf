worker_processes  1;

error_log  logs/error.log warn;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

env TEST_DOMAIN;
env SERVER_PORT;

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format main '{ "timestamp": "$time_iso8601", '
                        '"remote_addr": "$remote_addr", '
                        '"upstream_addr": "$upstream_addr",'
                        '"remote_user": "$remote_user", '
                        '"body_bytes_sent": "$body_bytes_sent", '
                        '"request_time": "$request_time", '
                        '"status": "$status", '
                        '"request": "$request", '
                        '"request_method": "$request_method", '
                        '"http_referrer": "$http_referer", '
                        '"body_bytes_sent": "$body_bytes_sent", '
                        '"http_x_forwarded_for": "$http_x_forwarded_for", '
                        '"host": "$host", '
                        '"remote_addr": "$remote_addr", '
                        '"http_user_agent": "$http_user_agent", '
                        '"http_uri": "$uri", '
                        '"resp_body": "$resp_body", '
                        '"http_host": "$http_host" }';
    access_log  logs/access.log  main;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;


    # 设置默认 lua 搜索路径，添加 lua 路径
    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';

    # 在生产环境上务必确保 lua_code_cache 设置成 on。
    lua_code_cache on;
}
